% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tz_lookup.R
\name{tz_lookup}
\alias{tz_lookup}
\title{Lookup time zones of sf or sp points}
\usage{
tz_lookup(x, crs = NULL)
}
\arguments{
\item{x}{either an \code{sfc} or \code{sf} points or \code{SpatialPoints(DataFrame)} object}

\item{crs}{the coordinate reference system: integer with the EPSG code, or character with proj4string.
If not specified (i.e., \code{NULL}) and \code{x} has no existing \code{crs}, EPSG: 4326 is assumed (lat/long).}
}
\value{
character vector the same length as \code{x} specifying the time zone of the points.
}
\description{
This can very quickly look up the time zone of many thousands of points,
however the underlying time zone map has been simplified to allow for this speed.
As such when a point is near a time zone boundary and not near a populated centre,
it may return the incorrect timezone. If accuracy is more important than speed,
try \code{\link[=tz_lookup2]{tz_lookup2()}}.
}
\examples{
if (require("sf")) {

state_pts <- lapply(seq_along(state.center$x), function(i) {
  st_point(c(state.center$x[i], state.center$y[i]))
})

state_centers_sf <- st_sf(st_sfc(state_pts))

state_centers_sf$tz <- tz_lookup(state_centers_sf)

plot(state_centers_sf[, "tz"])
}

}
